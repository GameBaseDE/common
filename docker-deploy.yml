services:
  - docker:19.03.4-dind

variables:
  CI_DOCKER_IMAGE: docker:19.03.4
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_IMAGE_NAME: $CI_REGISTRY/$CI_REGISTRY_IMAGE

stages:
  - build
  - push
  - deploy

Build image:
  stage: build
  image: $CI_DOCKER_IMAGE
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --cache-from "$DOCKER_IMAGE_NAME:latest" -t "$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA" .
    - docker push $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
  tags:
    - GameBase

Tag as latest:
  stage: push
  image: $CI_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull -t $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    - docker tag $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA $DOCKER_IMAGE_NAME:latest
    - docker push $DOCKER_IMAGE_NAME:latest
  tags:
    - GameBase  
  only:
    - master

Push tag:
  stage: push
  image: $CI_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    - docker tag $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA $DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME
    - docker push $DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME
  tags:
    - GameBase
  
Deploy master:
  stage: deploy
  image: $CI_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - if [ -n "$(docker ps --filter label=${DOCKER_IMAGE_NAME}-live -q)" ]; then docker stop ${DOCKER_IMAGE_NAME}-live; docker rm ${DOCKER_IMAGE_NAME}-live; fi
    - docker run 
        -d
        -p $HOST_PORT:$CONTAINER_PORT
        --name ${CI_REGDOCKER_IMAGE_NAMEISTRY_IMAGE}-live
        --label ${DOCKER_IMAGE_NAME}-live
        $DOCKER_IMAGE_NAME:latest
  when: manual
  tags:
    - GameBase
  only:
    - master

Deploy image:
  stage: deploy
  image: $CI_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - if [ -n "$(docker ps --filter label=${DOCKER_IMAGE_NAME}-dev -q)" ]; then docker stop $DOCKER_IMAGE_NAME-dev; docker rm $DOCKER_IMAGE_NAME-dev; fi
    - docker run -d -p $HOST_PORT:$CONTAINER_PORT
        --name ${DOCKER_IMAGE_NAME}-dev
        --label ${DOCKER_IMAGE_NAME}-dev
        $DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME
  when: manual
  tags:
    - GameBase
  except:
    - master

