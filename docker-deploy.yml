services:
  - docker:dind

variables:
  CI_DOCKER_IMAGE: docker:19
  DOCKER_DRIVER: overlay2

stages:
  - build
  - push
  - deploy

Build image:
  stage: build
  image: $CI_DOCKER_IMAGE
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  tags:
    - GameBase

Tag as latest:
  stage: push
  image: $CI_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - GameBase  
  only:
    - master

Push tag:
  stage: push
  image: $CI_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - GameBase
  only:
    - tags
  
Deploy master:
  stage: deploy
  image: $CI_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - if [ -n "$(docker ps --filter label=${CI_REGISTRY_IMAGE}-live -q)" ]; then docker stop ${CI_REGISTRY_IMAGE}-live; docker rm ${CI_REGISTRY_IMAGE}-live; fi
    - docker run 
        -d
        -p $HOST_PORT:$CONTAINER_PORT
        --name ${CI_REGISTRY_IMAGE}-live
        --label ${CI_REGISTRY_IMAGE}-live
        $CI_REGISTRY/$CI_REGISTRY_IMAGE:latest
  when: manual
  tags:
    - GameBase
  only:
    - master

Deploy image:
  stage: deploy
  image: $CI_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - if [ -n "$(docker ps --filter label=${CI_REGISTRY_IMAGE}-dev -q)" ]; then docker stop $CI_REGISTRY_IMAGE-dev; docker rm $CI_REGISTRY_IMAGE-dev; fi
    - docker run -d -p $HOST_PORT:$CONTAINER_PORT
        --name ${CI_REGISTRY_IMAGE}-dev
        --label ${CI_REGISTRY_IMAGE}-dev
        $CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  when: manual
  tags:
    - GameBase
  except:
    - master

